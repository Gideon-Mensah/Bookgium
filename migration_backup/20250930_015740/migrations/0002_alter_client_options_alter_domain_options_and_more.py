# Generated by Django 5.2.6 on 2025-09-21 00:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='client',
            options={'ordering': ['name'], 'verbose_name': 'Client Organization', 'verbose_name_plural': 'Client Organizations'},
        ),
        migrations.AlterModelOptions(
            name='domain',
            options={'ordering': ['domain']},
        ),
        migrations.AddField(
            model_name='client',
            name='account_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_clients', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='client',
            name='address_line1',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='address_line2',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='city',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='country',
            field=models.CharField(default='United States', max_length=100),
        ),
        migrations.AddField(
            model_name='client',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_clients', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='client',
            name='description',
            field=models.TextField(blank=True, help_text='Brief description of the organization', null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='email',
            field=models.EmailField(default='contact@example.com', help_text='Primary contact email', max_length=254),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='client',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='client',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='client_logos/'),
        ),
        migrations.AddField(
            model_name='client',
            name='max_invoices_per_month',
            field=models.PositiveIntegerField(default=100),
        ),
        migrations.AddField(
            model_name='client',
            name='max_storage_gb',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='client',
            name='max_users',
            field=models.PositiveIntegerField(default=5),
        ),
        migrations.AddField(
            model_name='client',
            name='monthly_fee',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.AddField(
            model_name='client',
            name='notes',
            field=models.TextField(blank=True, help_text='Internal notes about the client', null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='phone',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='plan_type',
            field=models.CharField(choices=[('starter', 'Starter Plan'), ('professional', 'Professional Plan'), ('enterprise', 'Enterprise Plan'), ('custom', 'Custom Plan')], default='starter', max_length=20),
        ),
        migrations.AddField(
            model_name='client',
            name='postal_code',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='primary_color',
            field=models.CharField(default='#007bff', help_text='Brand primary color (hex)', max_length=7),
        ),
        migrations.AddField(
            model_name='client',
            name='slug',
            field=models.SlugField(default='default-client', help_text='URL-friendly identifier', max_length=200, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='client',
            name='state',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='subscription_status',
            field=models.CharField(choices=[('trial', 'Free Trial'), ('active', 'Active'), ('expired', 'Expired'), ('suspended', 'Suspended'), ('cancelled', 'Cancelled')], default='trial', max_length=20),
        ),
        migrations.AddField(
            model_name='client',
            name='trial_ends',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='updated_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='client',
            name='website',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='domain',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='domain',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='domain',
            name='ssl_enabled',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='domain',
            name='updated_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='client',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='client',
            name='name',
            field=models.CharField(help_text='The name of the client organization', max_length=200),
        ),
        migrations.AlterField(
            model_name='client',
            name='on_trial',
            field=models.BooleanField(default=True, help_text='If the organization is on trial'),
        ),
        migrations.AlterField(
            model_name='client',
            name='paid_until',
            field=models.DateField(help_text='The date their subscription is valid until'),
        ),
        migrations.AlterField(
            model_name='domain',
            name='domain',
            field=models.CharField(help_text='Domain name (e.g., client.bookgium.com)', max_length=253, unique=True),
        ),
        migrations.AlterField(
            model_name='domain',
            name='is_primary',
            field=models.BooleanField(default=True, help_text='Primary domain for this client'),
        ),
        migrations.AlterUniqueTogether(
            name='domain',
            unique_together={('tenant', 'is_primary')},
        ),
        migrations.CreateModel(
            name='ClientContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('billing', 'Billing Contact'), ('technical', 'Technical Contact'), ('primary', 'Primary Contact'), ('other', 'Other')], default='other', max_length=20)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='clients.client')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
                'unique_together': {('client', 'is_primary')},
            },
        ),
        migrations.CreateModel(
            name='ClientUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('users', 'Active Users'), ('invoices', 'Invoices Created'), ('storage', 'Storage Used (MB)'), ('api_calls', 'API Calls'), ('login', 'User Login')], max_length=20)),
                ('value', models.PositiveIntegerField()),
                ('date_recorded', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='clients.client')),
            ],
            options={
                'ordering': ['-date_recorded', 'metric_type'],
                'unique_together': {('client', 'metric_type', 'date_recorded')},
            },
        ),
    ]
